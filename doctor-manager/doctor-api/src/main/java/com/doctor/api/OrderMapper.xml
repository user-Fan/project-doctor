<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.doctor.api.OrderMapper">
    <resultMap id="BaseResultMap" type="com.doctor.pojo.Order">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="doctor_id" property="doctorId" jdbcType="INTEGER"/>
        <result column="order_number" property="orderNumber" jdbcType="VARCHAR"/>
        <result column="put_time" property="putTime" jdbcType="TIMESTAMP"/>
        <result column="out_time" property="outTime" jdbcType="TIMESTAMP"/>
        <result column="begin_time" property="beginTime" jdbcType="TIMESTAMP"/>
        <result column="end_time" property="endTime" jdbcType="TIMESTAMP"/>
        <result column="put_reason" property="putReason" jdbcType="VARCHAR"/>
        <result column="out_reason" property="outReason" jdbcType="VARCHAR"/>
        <result column="remind" property="remind" jdbcType="INTEGER"/>
        <result column="pay" property="pay" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="order_point" property="orderPoint" jdbcType="INTEGER"/>
        <result column="doctor_name" property="doctorName" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, doctor_id, order_number, put_time, out_time, begin_time, end_time, put_reason, 
    out_reason, remind, pay, status, order_point
  </sql>

    <update id="updateByPrimaryKey" parameterType="com.doctor.pojo.Order">
        update order_user
        <set>
            <if test="orderPoint != null">
                order_user.order_point = #{orderPoint,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                order_user.status = #{status,jdbcType=INTEGER},
            </if>
            <if test="orderNumber != null">
                order_user.order_number = #{orderNumber,jdbcType=VARCHAR},
            </if>
            <if test="pay != null">
                order_user.pay= #{pay,jdbcType=INTEGER}
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>


    <insert id="insert" parameterType="com.doctor.pojo.Order">
    insert into order_user ( user_id,doctor_id,begin_time,end_time,put_reason)
    values ( #{userId,jdbcType=INTEGER},#{doctorId,jdbcType=INTEGER},#{beginTime,jdbcType=TIMESTAMP},#{endTime,jdbcType=TIMESTAMP},#{putReason,jdbcType=VARCHAR})
  </insert>

    <select id="getAllOrderByUserid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    doctor.doctor_name,
    order_user.begin_time,
    order_user.end_time,
    order_user.put_reason,
    order_user.id
    from order_user ,doctor where 1=1 and user_id=#{userId,jdbcType=INTEGER} and order_user.doctor_id = doctor.doctor_id and order_user.pay=0 and order_user.status =0;
  </select>

    <select id="getPayOrderByUserid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    doctor.doctor_name,
    order_user.begin_time,
    order_user.end_time,
    order_user.put_reason,
    order_user.id
    from order_user ,doctor where 1=1 and user_id=#{userId,jdbcType=INTEGER} and order_user.doctor_id = doctor.doctor_id and order_user.pay=1;
  </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    id, user_id, doctor_id, order_number, put_time, out_time, begin_time, end_time, put_reason,
    out_reason, remind, pay, status, order_point
    from order_user
    where id = #{id,jdbcType=INTEGER}
  </select>


    <select id="selectCountbyTimeAndDoctorId" resultType="java.lang.Integer">
    select
      COUNT(order_user.doctor_id)
    from order_user
    where order_user.end_time = #{date} and order_user.doctor_id = #{doctorId}
  </select>

    <select id="getOKOrderByUserid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
   SELECT
	doctor.doctor_name,
	order_user.begin_time,
	order_user.end_time,
	order_user.put_reason,
	order_user.id,
	order_user.pay,
	order_user.status,
	order_user.order_number
FROM
	order_user,
	doctor
WHERE
	1 = 1
	AND user_id =#{userId,jdbcType=INTEGER} and order_user.doctor_id = doctor.doctor_id  and order_user.pay=1 and order_user.status=1;
  </select>

    <select id="orderLoge" resultMap="BaseResultMap" parameterType="java.lang.Integer">
   SELECT
	doctor.doctor_name,
	order_user.begin_time,
	order_user.end_time,
	order_user.put_reason,
	order_user.id,
	order_user.pay,
	order_user.status,
	order_user.order_number
FROM
	order_user,
	doctor
WHERE
	1 = 1
	AND user_id =#{userId,jdbcType=INTEGER} and order_user.doctor_id = doctor.doctor_id ;
  </select>


</mapper>