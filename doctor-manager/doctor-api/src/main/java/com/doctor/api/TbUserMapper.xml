<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.doctor.api.TbUserMapper">
    <resultMap type="com.doctor.pojo.User" id="userinfoMap">
        <result column="user_id" property="userId"/>
        <result column="user_name" property="userName"/>
        <result column="user_age" property="userAge"/>
        <result column="user_id_card" property="userIdCard"/>
        <result column="user_phone" property="userPhone"/>
        <result column="user_Email" property="userEmail"/>
        <result column="user_address" property="userAddress"/>
        <result column="user_status" property="userStatus"/>
        <result column="user_gender" property="userGender"/>
        <result column="creat_time" property="creatTime"/>
        <result column="creatBy" property="creatBy"/>
        <result column="user_login" property="userLogin"/>
        <result column="update_time" property="update_time"/>
        <result column="updateBy" property="updateBy"/>
        <result column="photo" property="photo"/>
        <result column="permissions_id" property="permissionsId"/>
        <result column="password_value" property="Password"/>
        <result column="password_id" property="passwordId"/>
        <result column="user_point" property="userPoint" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
    user_id, user_name, user_age, user_id_card, user_phone, user_Email, user_address,
    user_status, user_gender, creat_time, creatBy, user_login, update_time, updateBy,
    photo, permissions_id, password_id, user_point
  </sql>

    <select id="getUserByUserLogin" parameterType="String" resultMap="userinfoMap">
        select 
	        user.user_id,
	        user.user_name,
	        user.user_age,
	        user.user_id_card,
	        user.user_phone,
	        user.user_Email,
	        user.user_address,
	        user.user_status,
	        user.user_gender,
	        user.creat_time,
	        user.creatBy,
	        user.user_login,
	        user.update_time,
	        user.updateBy,
	        user.photo,
	        user.permissions_id,
	        user_password.password_value,
	        user.user_point
		from user,user_password where user_login=#{userLogin} and user.password_id = user_password.password_id;
    </select>

    <!--更新用户数据 -->
    <update id="updataUserInfo" parameterType="com.doctor.pojo.User">
        update user
          set
            user.user_name=#{userName},
            user.user_age=#{userAge},
            user.user_id_card=#{userIdCard},
            user.user_address=#{userAddress}
          where  user.user_login = #{userLogin}
    </update>

    <select id="findByPhone" parameterType="String" resultMap="userinfoMap">
        select
	        user.user_id,
	        user.user_name,
	        user.user_age,
	        user.user_id_card,
	        user.user_phone,
	        user.user_Email,
	        user.user_address,
	        user.user_status,
	        user.user_gender,
	        user.creat_time,
	        user.creatBy,
	        user.user_login,
	        user.update_time,
	        user.updateBy,
	        user.photo,
	        user.permissions_id,
	        user_password.password_value
		from user,user_password where user_phone=#{phone} and user.password_id = user_password.password_id;
    </select>

    <select id="findByUserLogin" parameterType="String" resultMap="userinfoMap">
         select
	        user.user_id,
	        user.user_name,
	        user.user_age,
	        user.user_id_card,
	        user.user_phone,
	        user.user_Email,
	        user.user_address,
	        user.user_status,
	        user.user_gender,
	        user.creat_time,
	        user.creatBy,
	        user.user_login,
	        user.update_time,
	        user.updateBy,
	        user.photo,
	        user.permissions_id,
	        user_password.password_value,
	        user.user_point
		from user,user_password where user_login=#{userLogin}
    </select>

    <insert id="register" parameterType="com.doctor.pojo.User">
        insert into user(user_login,user_phone,user_Email,creat_time)
        values(#{userLogin},#{userPhone},#{userEmail},#{creatTime})
    </insert>

    <insert id="insertPassword" parameterType="com.doctor.pojo.User">
        insert into user_password(user_id,password_value)
        values(#{userId},#{Password})
    </insert>

    <update id="updatePasswordId" parameterType="Integer">
		update user set password_id = #{passwordId} where user_id = #{userId}
	</update>


   <update id="updatePoint" parameterType="Integer">
		update user set user_point = #{userPoint} where user_id = #{userId}
	</update>

    <select id="selectUserList" resultMap="userinfoMap">
        select
        <include refid="Base_Column_List"/>
        from user where user_status != -1
    </select>

    <select id="findById" resultMap="userinfoMap">
        select
        <include refid="Base_Column_List"/>
        from user where user_id = #{id} and  user_status != -1
    </select>

    <update id="updateStatus" >
        update user set user_status = #{status} where user_id = #{id}
    </update>

    <update id="updateUser" parameterType="com.doctor.pojo.User" >
        update user
        <set >
            <if test="userName != null and userName !=''" >
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userAge != null and userAge !=''" >
                user_age = #{userAge,jdbcType=INTEGER},
            </if>
            <if test="userIdCard != null and userIdCard !=''" >
                user_id_card = #{userIdCard,jdbcType=VARCHAR},
            </if>
            <if test="userPhone != null and userPhone !=''" >
                user_phone = #{userPhone,jdbcType=VARCHAR},
            </if>
            <if test="userEmail != null and userEmail !=''" >
                user_Email = #{userEmail,jdbcType=VARCHAR},
            </if>
            <if test="userAddress != null and userAddress !=''" >
                user_address = #{userAddress,jdbcType=VARCHAR},
            </if>
            <if test="userStatus != null and userStatus !=''" >
                user_status = #{userStatus,jdbcType=INTEGER},
            </if>
            <if test="userGender != null and userGender !=''" >
                user_gender = #{userGender,jdbcType=VARCHAR},
            </if>
            <if test="creatTime != null and creatTime !=''" >
                creat_time = #{creatTime,jdbcType=DATE},
            </if>
            <if test="creatBy != null and creatBy !=''" >
                creatBy = #{creatBy,jdbcType=VARCHAR},
            </if>
            <if test="userLogin != null and userLogin !=''" >
                user_login = #{userLogin,jdbcType=VARCHAR},
            </if>
            <if test="update_time != null and update_time !=''" >
                update_time = #{update_time,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null and updateBy !=''" >
                updateBy = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="photo != null and photo !=''" >
                photo = #{photo,jdbcType=VARCHAR},
            </if>
            <if test="permissionsId != null and permissionsId !=''" >
                permissions_id = #{permissionsId,jdbcType=INTEGER},
            </if>
            <if test="passwordId != null and passwordId !=''" >
                password_id = #{passwordId,jdbcType=INTEGER},
            </if>
            <if test="userPoint != null and userPoint !=''" >
                user_point = #{userPoint,jdbcType=INTEGER},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>

    <update id="deleteUser">
        update user set user_status = -1 where user_id = #{id}
    </update>
</mapper>